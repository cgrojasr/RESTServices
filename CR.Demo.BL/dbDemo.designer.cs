#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CR.Demo.BL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbdemocr")]
	public partial class dbDemoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertalumno(alumno instance);
    partial void Updatealumno(alumno instance);
    partial void Deletealumno(alumno instance);
    partial void Insertinscripcion(inscripcion instance);
    partial void Updateinscripcion(inscripcion instance);
    partial void Deleteinscripcion(inscripcion instance);
    partial void Insertcurso(curso instance);
    partial void Updatecurso(curso instance);
    partial void Deletecurso(curso instance);
    #endregion
		
		public dbDemoDataContext() : 
				base(global::CR.Demo.BL.Properties.Settings.Default.dbdemocrConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDemoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDemoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<alumno> alumnos
		{
			get
			{
				return this.GetTable<alumno>();
			}
		}
		
		public System.Data.Linq.Table<inscripcion> inscripcions
		{
			get
			{
				return this.GetTable<inscripcion>();
			}
		}
		
		public System.Data.Linq.Table<curso> cursos
		{
			get
			{
				return this.GetTable<curso>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alumno")]
	public partial class alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private int _edad;
		
		private EntitySet<inscripcion> _inscripcions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OnedadChanging(int value);
    partial void OnedadChanged();
    #endregion
		
		public alumno()
		{
			this._inscripcions = new EntitySet<inscripcion>(new Action<inscripcion>(this.attach_inscripcions), new Action<inscripcion>(this.detach_inscripcions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edad", DbType="Int NOT NULL")]
		public int edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="alumno_inscripcion", Storage="_inscripcions", ThisKey="id", OtherKey="idalumno")]
		public EntitySet<inscripcion> inscripcions
		{
			get
			{
				return this._inscripcions;
			}
			set
			{
				this._inscripcions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inscripcions(inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.alumno = this;
		}
		
		private void detach_inscripcions(inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.alumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inscripcion")]
	public partial class inscripcion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idalumno;
		
		private int _idcurso;
		
		private EntityRef<alumno> _alumno;
		
		private EntityRef<curso> _curso;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidalumnoChanging(int value);
    partial void OnidalumnoChanged();
    partial void OnidcursoChanging(int value);
    partial void OnidcursoChanged();
    #endregion
		
		public inscripcion()
		{
			this._alumno = default(EntityRef<alumno>);
			this._curso = default(EntityRef<curso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idalumno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idalumno
		{
			get
			{
				return this._idalumno;
			}
			set
			{
				if ((this._idalumno != value))
				{
					if (this._alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidalumnoChanging(value);
					this.SendPropertyChanging();
					this._idalumno = value;
					this.SendPropertyChanged("idalumno");
					this.OnidalumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcurso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idcurso
		{
			get
			{
				return this._idcurso;
			}
			set
			{
				if ((this._idcurso != value))
				{
					if (this._curso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcursoChanging(value);
					this.SendPropertyChanging();
					this._idcurso = value;
					this.SendPropertyChanged("idcurso");
					this.OnidcursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="alumno_inscripcion", Storage="_alumno", ThisKey="idalumno", OtherKey="id", IsForeignKey=true)]
		public alumno alumno
		{
			get
			{
				return this._alumno.Entity;
			}
			set
			{
				alumno previousValue = this._alumno.Entity;
				if (((previousValue != value) 
							|| (this._alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._alumno.Entity = null;
						previousValue.inscripcions.Remove(this);
					}
					this._alumno.Entity = value;
					if ((value != null))
					{
						value.inscripcions.Add(this);
						this._idalumno = value.id;
					}
					else
					{
						this._idalumno = default(int);
					}
					this.SendPropertyChanged("alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_inscripcion", Storage="_curso", ThisKey="idcurso", OtherKey="id", IsForeignKey=true)]
		public curso curso
		{
			get
			{
				return this._curso.Entity;
			}
			set
			{
				curso previousValue = this._curso.Entity;
				if (((previousValue != value) 
							|| (this._curso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._curso.Entity = null;
						previousValue.inscripcions.Remove(this);
					}
					this._curso.Entity = value;
					if ((value != null))
					{
						value.inscripcions.Add(this);
						this._idcurso = value.id;
					}
					else
					{
						this._idcurso = default(int);
					}
					this.SendPropertyChanged("curso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.curso")]
	public partial class curso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<inscripcion> _inscripcions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public curso()
		{
			this._inscripcions = new EntitySet<inscripcion>(new Action<inscripcion>(this.attach_inscripcions), new Action<inscripcion>(this.detach_inscripcions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_inscripcion", Storage="_inscripcions", ThisKey="id", OtherKey="idcurso")]
		public EntitySet<inscripcion> inscripcions
		{
			get
			{
				return this._inscripcions;
			}
			set
			{
				this._inscripcions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inscripcions(inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.curso = this;
		}
		
		private void detach_inscripcions(inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.curso = null;
		}
	}
}
#pragma warning restore 1591
